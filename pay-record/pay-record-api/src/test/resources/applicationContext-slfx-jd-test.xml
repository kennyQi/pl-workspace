<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">

	<context:annotation-config />
	<context:component-scan base-package="slfx,hg" />	
	
	<!-- 强制SPRING使用CGLIB动态代理，不使用JDK代理。 -->	
	<aop:config proxy-target-class="true" />
	
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
				<value>classpath:jdbc.properties</value>
				<value>classpath:log4j.properties</value>
			</list>
		</property>
	</bean> 
	<bean id="jpConfigurerListener" class="slfx.jp.app.listener.JpConfigurerListener" />
-->
	<bean id="propertyConfigurer" class="hg.common.component.RemoteConfigurer">
 		<property name="remoteConfigUrl" value="http://192.168.2.85:9999/cc-admin/property-config/map" /> 
 		<property name="projectId" value="SLFX_API" /> 
 		<property name="environmentName" value="${environmentName}" /> 
 		<property name="loadConfigTimeOut" value="30000" />
		<!-- <property name="listener" ref="jpConfigurerListener" />-->
<!-- 		<property name="locations"> -->
<!-- 			<list> -->
<!-- 				<value>classpath*:ygconfig.properties</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
 	</bean> 
<!--  	<aop:aspectj-autoproxy /> -->
<!--  	<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />  -->
<!--   			<aop:pointcut id="model" expression="execution(* hjb.fund.domain.model.**.*(..))" /> -->
<!--  			<aop:pointcut id="model" expression="execution(* hjb.fund.app.component.aop.test.**.*(..))" /> -->
<!-- 	<bean id="modelAspectBean" class="hjb.fund.app.component.aop.ModelAspect" /> -->
<!-- 	<aop:config> -->
<!-- 		<aop:aspect id="modelAspect" ref="modelAspectBean"> -->
<!-- 			<aop:pointcut id="model" expression="execution(* hjb.fund.app.component.aop.test.**.*(..))" /> -->
<!-- 			<aop:before pointcut-ref="model" method="doBefore" /> -->
<!-- 			<aop:after pointcut-ref="model" method="doAfter" /> -->
<!-- 			<aop:around pointcut-ref="model" method="doAround" /> -->
<!-- 			<aop:after-throwing pointcut-ref="model" method="doThrowing" throwing="ex" /> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	
 	<import resource="classpath:spring/spring-hibernate-common.xml" />
 	<import resource="classpath:spring/spring-redis.xml" />
 	<import resource="classpath:spring/dubbo-consumer.xml" /> 
 	<import resource="classpath:spring/spring-actions.xml" />
	<!-- <import resource="classpath:spring/junit-test-spring-service.xml" /> -->
	<!-- 
	<import resource="classpath:spring/junit-test-spring-service.xml" />
	<import resource="classpath:spring-service.xml" />
	 -->
	 
</beans>
