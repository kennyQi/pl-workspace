<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">

	<context:annotation-config />
	<context:component-scan base-package="hg" />

	<!-- 强制SPRING使用CGLIB动态代理，不使用JDK代理。 -->
	<aop:config proxy-target-class="true" />

	<!-- 验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">110</prop>
						<prop key="kaptcha.textproducer.font.size">26</prop>
						<prop key="kaptcha.image.height">30</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						<prop key="kaptcha.obscurificator.impl">hg.dzpw.admin.common.NoWater</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- 电子票务配置监听器 -->
	<bean id="dzpwConfigurerListener" class="hg.dzpw.admin.component.listener.DZPWAdminConfigurerListener" />

	<!-- 属性设置 -->
	<bean id="propertyConfigurer1" class="hg.common.component.RemoteConfigurer">
		<property name="remoteConfigUrl" value="${remoteConfigUrl}" />
		<property name="projectId" value="DZPW" />
		<property name="environmentName" value="${environmentName}" />
		<property name="loadConfigTimeOut" value="30000" />
		<property name="listener" ref="dzpwConfigurerListener" />
		<property name="locations">
			<list>
				<value>classpath*:system.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="hgLogger" class="hg.log.util.HgLogger">
		<constructor-arg name="projectId" value="DZPW" />
        <constructor-arg name="envId" value="${environmentName}" />
       <constructor-arg name="logRepository" ref="logRepository"/>
    </bean>
	
	
	<!-- 汇金宝支付服务配置 -->
	<bean id="hjbPayServiceConfig" class="hg.dzpw.pojo.common.HjbPayServiceConfig">
		<property name="cerPath" value="${hjb_cer_path}" />
		<property name="signPath" value="${hjb_sign_path}" />
		<property name="signPassword" value="${hjb_sign_password}" />
		<property name="HJBServerUrl" value="${hjb_server_url}" />
		<property name="version" value="${hjb_version}" />
		<property name="merchantId" value="${hjb_merchant_id}" />
		<property name="dzpwCstNo" value="${hjb_dzpw_cst_no}" />
		<property name="dzpwUserId" value="${hjb_dzpw_user_id}" />
	</bean>

	<!-- spring session -->
	<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="1800" />
	</bean>
	<bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis1_ip}" />
	</bean>
	
	<!-- 导入xml配置 -->
	<import resource="classpath:application-dzpw.xml" />
	<import resource="classpath:spring/spring-shiro-config.xml" />
	<!--
	<import resource="classpath:spring/dubbo-consumer.xml" />
	 -->
</beans>
