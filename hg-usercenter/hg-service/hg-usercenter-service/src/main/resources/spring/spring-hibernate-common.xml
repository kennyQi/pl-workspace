<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		   http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- 数据源配置 -->
	<!-- 使用其他数据源之前调用DynamicDataSource.changeDataSource("数据源key"); -->
	<bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<!-- 连接池配置 -->
		<property name="maxIdle" value="20"/>
		<property name="maxActive" value="100"/>
		<property name="maxWait" value="10000"/>
		<property name="defaultAutoCommit" value="false"/>
		<property name="timeBetweenEvictionRunsMillis" value="3600000"/>
		<property name="minEvictableIdleTimeMillis" value="3600000"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="10"/>
		<property name="logAbandoned" value="true"/>
	</bean>
	<!-- 默认数据源 -->
	<bean id="defaultDataSource" parent="parentDataSource">
		<property name="url" value="${jdbc_url}"/>
		<property name="username" value="${db_username}"/>
		<property name="password" value="${db_password}"/>
	</bean>
	<!-- 其他数据源 -->
	<bean id="otherDataSource" parent="parentDataSource">
		<property name="url" value="${jdbc_other_url}"/>
		<property name="username" value="${db_other_username}"/>
		<property name="password" value="${db_other_password}"/>
	</bean>
	<bean id="dataSource" class="hg.framework.service.component.base.db.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="other" value-ref="otherDataSource"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="defaultDataSource"/>
	</bean>

	<!-- hibernate 会话工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="hg.framework.common.base.**,hg.demo.member.common.domain.model.**"/>
		<property name="hibernateProperties">
			<props>
				<!-- 指定Hibernate的连接方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!-- 配置启动应用时，是否根据Hibernate映射自动创建数据表 -->
				<!-- 其它几个参数的意思: -->
				<!-- validate			加载hibernate时，验证创建数据库表结构 -->
				<!-- create				每次加载hibernate，重新创建数据库表结构 -->
				<!-- create-drop		加载hibernate时创建，退出是删除表结构 -->
				<!-- update				加载hibernate自动更新数据库结构 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<!-- 在Spring @Transactional声明式事务管理的配置中,hibernate.current_session_context_class=thread -->
				<!-- 这一句是不能加的,加了就会出错..那为什么不能加呢? -->
				<!-- 那是因为在Spring事务管理中,current Session是绑定到SpringSessionContext中的,而不是ThreadLocalSessionContext中的 -->
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> -->
				<!-- <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
			</props>
		</property>
	</bean>

	<!-- hibernate 其他数据源会话工厂（如果不需要自动生成表结构可以注释掉） -->
	<bean parent="sessionFactory">
		<property name="dataSource" ref="otherDataSource"/>
		<property name="hibernateProperties" value="hibernate.hbm2ddl.auto=update"/>
	</bean>

	<!-- 事务处理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
		<!-- 主事务决定是否回滚 -->
		<property name="globalRollbackOnParticipationFailure" value="false"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 事务注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>