package hgtech.jf.hg.rulelogic;

import java.io.Serializable;

import hgtech.jf.piaol.trade.PiaolTrade;
import hgtech.jfcal.model.CalResult;
import hgtech.jfcal.model.DataRow;
import hgtech.jfcal.rulelogic.BaseSingleRule;
import hgtech.jfcal.rulelogic.RuleLogic;

/**
 * @类功能说明：撤销模版类(汇购)
 * @类修改者：
 * @修改日期：2015年08月31日下午3:41:17
 * @修改说明：
 * @公司名称：
 * @作者：zhaoqf
 * @创建时间：2015年08月31日下午3:41:17
 * 
 */
public class HjfCancelLogic extends BaseSingleRule implements RuleLogic {

	@SuppressWarnings({ "static-access", "unused" })
	@Override
	public CalResult compute(Serializable flow) throws Exception {
		String str = "";
		String event = null;
		CalResult result = new CalResult();
		PiaolTrade trade = (PiaolTrade) flow;
		String tradeName = trade.tradeName;
		if (!trade.TRADE_CANCEL.trim().equals(tradeName.trim())) {
			return null;
		}
		Integer jf = Integer.parseInt(new java.text.DecimalFormat("0").format(trade.money));
		Integer integral = 0;
		Integer integralIncrement = 0;
		DataRow session = rule.session.get(trade.user);
		if (session == null) {
			session = new DataRow();
			if (trade.TRADE_CANCEL.trim().equals(tradeName.trim())) {
				integralIncrement = jf;
				event = "cancel";
				str += "用户撤销";
			}
		} else {
			if (trade.TRADE_CANCEL.trim().equals(tradeName.trim())) {// 当前用户操作事件是用户注册
				Boolean b = (Boolean) session.get("cancel");
				if (b == null) {
					integralIncrement = jf;
					event = "cancel";
					str += "用户撤销";
				} else {
					integralIncrement = 0;
					str += "用户已经撤销";
				}
			}
		}
		integral += integralIncrement;
		rule.session.put(trade.user, session);
		result.out_jf = integral * -1;
		result.in_rule = rule;
		result.in_tradeFlow = flow;
		result.in_userCode = trade.getUser();
		result.out_resultText = str;
		result.in_remark = "用户撤销";
		return result;
	}

}
