<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
						>
	
	<!-- 自动扫描 -->
	<context:component-scan base-package="hsl.alipay" />
	<context:component-scan base-package="hsl,hg" />
	
	<!-- 强制SPRING使用CGLIB动态代理，不使用JDK代理。 -->
	<aop:config proxy-target-class="true" />
	
	 <!-- 远程配置 -->
   <bean id="propertyConfigurer" class="hg.common.component.RemoteConfigurer">
       <property name="remoteConfigUrl" value="${remoteConfigUrl}" />
       <property name="projectId" value="ZZGL-H5" />
       <property name="environmentName" value="${environmentName}" />
       <property name="loadConfigTimeOut" value="30000" />
   </bean>
	<bean id="plzxConfigurerListener" class="hsl.h5.base.listener.ZZPLWapConfigurerListener" />
	<bean id="slfxApiClient" class="plfx.api.client.base.slfx.SlfxApiClient">
		<constructor-arg name="url" value="${slfx_api_client_url}" />
		<constructor-arg name="clientKey" value="hsl" />
		<constructor-arg name="secretKey" value="abc" />
	</bean>
	<!-- 注入中智分销客户端 -->
	<bean id="plfxApiClient" class="plfx.api.client.common.util.PlfxApiClient">
		<constructor-arg name="url" value="${apiUrl}" />
		<constructor-arg name="dealerKey" value="${dealerKey}" />
		<constructor-arg name="secretKey" value="${fx_secretKey}" />
	</bean>
	
	<bean id="hgLogger" class="hg.log.util.HgLogger">
		<constructor-arg name="projectId" value="HSL" />
		<constructor-arg name="envId" value="${environmentName}" />
		<constructor-arg name="logRepository" ref="logRepository" />
	</bean>
	
	<bean id="smsUtil" class="hg.common.util.SMSUtils">
		<constructor-arg name="smsAddress" value="${sms_address}" />
		<constructor-arg name="smsUser" value="${sms_user}" />
		<constructor-arg name="smsPassword" value="${sms_password}"/>
	</bean>
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">yes</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">100</prop>
						<prop key="kaptcha.textproducer.font.size">26</prop>
						<prop key="kaptcha.image.height">38</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
						<prop key="kaptcha.noise.impl">hsl.web.controller.common.NoNoise</prop>
						<prop key="kaptcha.obscurificator.impl">hsl.h5.control.constant.NoWater</prop>
						<!--
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">80</prop>
						<prop key="kaptcha.textproducer.font.size">28</prop>
						<prop key="kaptcha.image.height">32</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						 -->
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<!-- 开启注解 -->
	<context:annotation-config />
	
	<import resource="classpath:spring/spring-hibernate-common.xml"/>
	<import resource="classpath:spring/spring-redis.xml" />
 	<import resource="classpath:spring/spring-mongodb.xml" />
 	<import resource="classpath:spring/amqp-producer.xml" />
 	<import resource="classpath:spring/dubbo-consumer.xml" />
</beans>
